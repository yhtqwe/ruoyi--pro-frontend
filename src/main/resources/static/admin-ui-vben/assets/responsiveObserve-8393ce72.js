import{ci as m,f as o,_ as l}from"./index-2b36f9e3.js";const v=["xxxl","xxl","xl","lg","md","sm","xs"],u=i=>({xs:`(max-width: ${i.screenXSMax}px)`,sm:`(min-width: ${i.screenSM}px)`,md:`(min-width: ${i.screenMD}px)`,lg:`(min-width: ${i.screenLG}px)`,xl:`(min-width: ${i.screenXL}px)`,xxl:`(min-width: ${i.screenXXL}px)`,xxxl:`{min-width: ${i.screenXXXL}px}`});function b(){const[,i]=m();return o(()=>{const n=u(i.value),r=new Map;let a=-1,c={};return{matchHandlers:{},dispatch(e){return c=e,r.forEach(t=>t(c)),r.size>=1},subscribe(e){return r.size||this.register(),a+=1,r.set(a,e),e(c),a},unsubscribe(e){r.delete(e),r.size||this.unregister()},unregister(){Object.keys(n).forEach(e=>{const t=n[e],s=this.matchHandlers[t];s?.mql.removeListener(s?.listener)}),r.clear()},register(){Object.keys(n).forEach(e=>{const t=n[e],s=h=>{let{matches:x}=h;this.dispatch(l(l({},c),{[e]:x}))},d=window.matchMedia(t);d.addListener(s),this.matchHandlers[t]={mql:d,listener:s},s(d)})},responsiveMap:n}})}export{v as r,b as u};
